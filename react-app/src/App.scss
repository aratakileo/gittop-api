:root {
  --default-content-color: #000;
  --default-content-hover-color: #00000035;
}

@mixin set-square-size($size) {
  width: $size;
  height: $size;
}

@mixin add-icon($image, $size, $color: var(--default-content-color), $spacing: 0px, $where: after) {
  &:#{$where} {
    @if $where == after {
      margin-left: $spacing;
    } @else {
      margin-right: $spacing;
    }

    @include set-square-size($size);

    background-color: $color;
    mask-image: $image;
    mask-repeat: no-repeat;
    mask-size: $size $size;
    display: inline-block;
    content: '';
  }
}

@mixin set-universal-hover() {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }

  @media (hover: none) {
    &:active {
      @content;
    }
  }
}

@mixin add-hover-bg-animation($hover-color: var(--default-content-hover-color)) {
  border-radius: 4px;
  transition: 0.3s ease-in-out;
  box-sizing: border-box;
  padding: 8px;

  @include set-universal-hover {
    background-color: $hover-color;
  }
}

@mixin make-borderless-btn($color: var(--default-content-color), $hover-color: var(--default-content-hover-color)) {
  @include add-hover-bg-animation($hover-color);

  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  align-content: center;
  font-weight: bold;
  border: none;
  color: $color;
  background: none;
}

@mixin add-solid-border($color: var(--default-content-color), $thickness: 1px) {
  border: 1px solid $color;
}

@mixin make-bordered-btn($color: var(--default-content-color), $hover-color: var(--default-content-hover-color)) {
  @include make-borderless-btn($color, $hover-color);
  @include add-solid-border($color);
}

.repo-card {
  .name-container {
    display: flex;
  }

  .lang-name {
    @include add-solid-border();
    border-radius: 4px;
    padding: 1px;
    margin-left: 0.4em;
  }

  .stars {
    @include add-icon(url('icons/star.svg'), 1rem, #FFB90C, 0.2rem);
    margin-left: 0.4em;
    display: flex;
  }
}

.repos-container {
  width: 100%;
  height: max-content;
  margin-bottom: 0.5em;
}

.center {
  @mixin vertical() {
    flex-wrap: wrap;
    align-content: center;
  }

  @mixin horizontal() {
    display: flex;
    justify-content: center;
  }

  &:not(:is(.vertical, .horizontal)) {
    @include vertical();
    @include horizontal();
  }

  &.vertical {
    @include vertical();
  }

  &.horizontal {
    @include horizontal();
  }
}

.invisible {
  visibility: hidden;
  transition: none !important;
}

.page-container {
  flex-direction: column;
  margin-left: 25px;
  margin-right: 25px;
}

.next-btn {
  @include make-borderless-btn();
  @include add-icon(url('icons/forward.svg'), 0.9rem, $spacing: 0.2rem);
  font-size: 1rem;
}

.prev-btn {
  @include make-borderless-btn();
  @include add-icon(url('icons/back.svg'), 0.9rem, $spacing: 0.2rem, $where: before);
  font-size: 1rem;
}

.syncnow-btn {
  @include make-borderless-btn();
  font-size: 1rem;
}

.bg-hover-animation {
  @include add-hover-bg-animation();
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

.emoji {
  @include set-square-size(1em);
}

a {
  color: var(--default-content-color);
}
